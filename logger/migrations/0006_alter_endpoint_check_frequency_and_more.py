# Generated by Django 4.2.1 on 2023-05-09 09:05

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("logger", "0005_service_calendar"),
    ]

    operations = [
        migrations.AlterField(
            model_name="endpoint",
            name="check_frequency",
            field=models.PositiveIntegerField(
                choices=[
                    (30, "30 seconds"),
                    (45, "45 seconds"),
                    (60, "1 minute"),
                    (120, "2 minutes"),
                    (180, "3 minutes"),
                    (300, "5 minutes"),
                    (600, "10 minutes"),
                    (750, "15 minutes"),
                    (900, "30 minutes"),
                ],
                default=180,
            ),
        ),
        migrations.AlterField(
            model_name="endpoint",
            name="confirmation_period",
            field=models.PositiveIntegerField(
                choices=[
                    (0, "confirm immediately"),
                    (5, "confirm after 5 seconds"),
                    (10, "confirm after 10 seconds"),
                    (15, "confirm after 15 seconds"),
                    (30, "confirm after 30 seconds"),
                    (60, "confirm after 60 seconds"),
                    (120, "confirm after 120 seconds"),
                    (180, "confirm after 180 seconds"),
                    (300, "confirm after 300 seconds"),
                ],
                default=0,
            ),
        ),
        migrations.AlterField(
            model_name="endpoint",
            name="domain_expiration",
            field=models.PositiveIntegerField(
                choices=[
                    (1, "1 Day before expiration"),
                    (2, "2 Day before expiration"),
                    (3, "3 Day before expiration"),
                    (7, "7 Day before expiration"),
                    (14, "14 Day before expiration"),
                    (30, "30 Day before expiration"),
                    (60, "60 Day before expiration"),
                ],
                default=1,
            ),
        ),
        migrations.AlterField(
            model_name="endpoint",
            name="recovery_period",
            field=models.PositiveIntegerField(
                choices=[
                    (0, "recover immediately"),
                    (60, "recover after 1 minute"),
                    (180, "recover after 3 minutes"),
                    (300, "recover after 5 minutes"),
                    (900, "recover after 15 minutes"),
                    (1800, "recover after 30 minutes"),
                    (3600, "recover after 1 hour"),
                    (7200, "recover after 2 hours"),
                ],
                default=180,
            ),
        ),
        migrations.AlterField(
            model_name="endpoint",
            name="ssl_expiration",
            field=models.PositiveIntegerField(
                choices=[
                    (1, "1 Day before expiration"),
                    (2, "2 Day before expiration"),
                    (3, "3 Day before expiration"),
                    (7, "7 Day before expiration"),
                    (14, "14 Day before expiration"),
                    (30, "30 Day before expiration"),
                    (60, "60 Day before expiration"),
                ],
                default=1,
            ),
        ),
        migrations.AlterField(
            model_name="endpoint",
            name="timeout",
            field=models.PositiveIntegerField(
                choices=[
                    (60, "60 seconds"),
                    (45, "45 seconds"),
                    (30, "30 seconds"),
                    (15, "15 seconds"),
                    (10, "10 seconds"),
                    (5, "5 seconds"),
                    (3, "3 seconds"),
                    (2, "2 seconds"),
                ],
                default=30,
            ),
        ),
        migrations.AlterField(
            model_name="requesthandler",
            name="method",
            field=models.CharField(
                choices=[
                    ("HEAD", "HEAD"),
                    ("GET", "GET"),
                    ("POST", "POST"),
                    ("PUT", "PUT"),
                    ("PATCH", "PATCH"),
                ],
                max_length=5,
            ),
        ),
    ]
