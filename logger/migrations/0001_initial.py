# Generated by Django 4.2.1 on 2023-05-04 18:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CronHandler",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "logger_type",
                    models.CharField(
                        choices=[("cron", "CRON Monitor"), ("hook", "Hook Monitor")],
                        max_length=255,
                    ),
                ),
                ("url", models.URLField()),
                ("name", models.CharField(default="Logger", max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("push_email", models.BooleanField(default=True)),
                ("push_sms", models.BooleanField(default=False)),
                ("push_call", models.BooleanField(default=False)),
                ("push_notif", models.BooleanField(default=False)),
                (
                    "period",
                    models.PositiveIntegerField(
                        default=30,
                        validators=[django.core.validators.MinValueValidator(30)],
                    ),
                ),
                ("confirmation_period", models.PositiveIntegerField(default=0)),
                ("escalation_period", models.PositiveIntegerField(default=5)),
                ("is_public", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="CronSubscriberAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Endpoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "logger_type",
                    models.CharField(
                        choices=[
                            ("status", "Status Monitor"),
                            ("keyword", "Keyword Monitor"),
                            ("ping", "Ping Monitor"),
                            ("tcp", "TCP Monitor"),
                            ("udp", "UDP Monitor"),
                            ("smtp", "SMTP Monitor"),
                            ("pop", "POP Monitor"),
                            ("imap", "IMAP Monitor"),
                        ],
                        max_length=255,
                    ),
                ),
                ("url", models.URLField()),
                ("name", models.CharField(default="Logger", max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("port", models.CharField(blank=True, max_length=255, null=True)),
                ("push_email", models.BooleanField(default=True)),
                ("push_sms", models.BooleanField(default=False)),
                ("push_call", models.BooleanField(default=False)),
                ("push_notif", models.BooleanField(default=False)),
                ("check_frequency", models.PositiveIntegerField()),
                ("timeout", models.PositiveIntegerField(default=5)),
                ("confirmation_period", models.PositiveIntegerField(default=5)),
                ("recovery_period", models.PositiveIntegerField(default=5)),
                ("escalation_period", models.PositiveIntegerField(default=5)),
                ("regex", models.CharField(max_length=255)),
                (
                    "domain_expiration",
                    models.PositiveIntegerField(
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (7, 7),
                            (14, 14),
                            (30, 30),
                            (60, 60),
                        ],
                        default=1,
                    ),
                ),
                (
                    "ssl_expiration",
                    models.PositiveIntegerField(
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (7, 7),
                            (14, 14),
                            (30, 30),
                            (60, 60),
                        ],
                        default=1,
                    ),
                ),
                ("follow_requests", models.BooleanField(default=True)),
                ("regions", models.JSONField(default=list)),
                ("verify_ssl", models.BooleanField(default=False)),
                ("is_public", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="GuestAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="RequestHandler",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("GET", "GET"),
                            ("POST", "POST"),
                            ("PUT", "PUT"),
                            ("PATCH", "PATCH"),
                        ],
                        max_length=5,
                    ),
                ),
                ("headers", models.JSONField(blank=True, null=True)),
                ("body", models.JSONField(default=list)),
                (
                    "auth_username",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "auth_password",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("token", models.CharField(blank=True, max_length=255, null=True)),
                ("remember_cookies", models.BooleanField(default=False)),
                ("log_response", models.BooleanField(default=False)),
                ("log_screen", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="SubscriberAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateTimeField(auto_now_add=True)),
                (
                    "endpoint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="logger.endpoint",
                    ),
                ),
            ],
        ),
    ]
